{
  "config": {
  },
  "scripts": {
    "help": {
      "exec": "./cli/utils/print_commands_list.sh",
      "description": "Show help for all custom CLI commands list or only for provided arguments."
    },
    "setup": {
      "exec": "npx lerna bootstrap",
      "description": "Setup project modules and install dependencies."
    },
    "clean": {
      "exec": "npx rimraf ./target && echo 'Cleaned up target directory.'",
      "description": "Remove project built assets."
    },
    "purge": {
      "exec": [
        "./run clean",
        "npx lerna clean -y "
      ],
      "description": "Remove project built assets and purge all npm modules."
    },
    "=============================================================================================================": "",
    "start-dev-server": {
      "exec": "ts-node --project ./cli/tsconfig.json ./cli/build/DevRunner.ts",
      "private": true,
      "description": "Start project serving (webpack dev server)."
    },
    "build-bundle": {
      "exec": "./run clean && ts-node --project ./cli/tsconfig.json ./cli/build/BuildRunner.ts",
      "private": true,
      "description": "Build project assets and related source files. Following arguments can include module names."
    },
    "============================================================================================================": "==",
    "start": {
      "exec": "npx cross-env NODE_ENV=production ./run start-dev-server",
      "description": "Start webpack dev server in production mode."
    },
    "start:dev": {
      "exec": "npx cross-env NODE_ENV=development REFRESH=true ./run start-dev-server",
      "description": "Start webpack dev server in dev mode."
    },
    "build": {
      "exec":"npx cross-env NODE_ENV=production ANALYZE=true ./run build-bundle",
      "description": "Build project bundles in production mode."
    },
    "build:dev": {
      "exec":"npx cross-env NODE_ENV=development ANALYZE=true ./run build-bundle",
      "description": "Build project bundles in dev mode."
    },
    "==========================================================================================================": "===",
    "verify": {
      "exec": [
        "./run typecheck",
        "./run test",
        "./run lint"
      ],
      "description": "Run full tests that include unit tests, linting and typechecks."
    },
    "test": {
      "exec": "npx cross-env NODE_ENV=test ts-node --project ./cli/test/config/tsconfig.json ./cli/test/TestRunner.ts",
      "description": "Run jest unit tests."
    },
    "lint": {
      "exec": "npx eslint -c ./src/.eslintrc.json --ignore-path ./src/.eslintignore src/**/*.ts src/**/*.tsx cli/**/*.ts",
      "description": "Run eslint for project codestyle checking."
    },
    "format": {
      "exec": "npx prettier --write \"**/*.(js|ts|tsx)\" && npx eslint . --ext .ts,.tsx --fix"
    },
    "typecheck": {
      "exec": "npx tsc -p src --noEmit",
      "description": "Run TS typechecks."
    }
  }
}
